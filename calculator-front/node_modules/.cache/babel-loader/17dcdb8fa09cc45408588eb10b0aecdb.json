{"remainingRequest":"/Users/fatlum/Desktop/development/calculator/calculator-front/node_modules/babel-loader/lib/index.js!/Users/fatlum/Desktop/development/calculator/calculator-front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/fatlum/Desktop/development/calculator/calculator-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fatlum/Desktop/development/calculator/calculator-front/src/components/Calculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fatlum/Desktop/development/calculator/calculator-front/src/components/Calculator.vue","mtime":1680273315528},{"path":"/Users/fatlum/Desktop/development/calculator/calculator-front/babel.config.js","mtime":1680273142803},{"path":"/Users/fatlum/Desktop/development/calculator/calculator-front/node_modules/cache-loader/dist/cjs.js","mtime":1680273139794},{"path":"/Users/fatlum/Desktop/development/calculator/calculator-front/node_modules/babel-loader/lib/index.js","mtime":1680273139781},{"path":"/Users/fatlum/Desktop/development/calculator/calculator-front/node_modules/cache-loader/dist/cjs.js","mtime":1680273139794},{"path":"/Users/fatlum/Desktop/development/calculator/calculator-front/node_modules/vue-loader/lib/index.js","mtime":1680273138340}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBleHByZXNzaW9uOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFwcGVuZFRvRXhwcmVzc2lvbih2YWx1ZSkgewogICAgICB0aGlzLmV4cHJlc3Npb24gKz0gdmFsdWU7CiAgICB9LAogICAgY2xlYXJFeHByZXNzaW9uKCkgewogICAgICB0aGlzLmV4cHJlc3Npb24gPSAnJzsKICAgIH0sCiAgICBiYWNrc3BhY2UoKSB7CiAgICAgIHRoaXMuZXhwcmVzc2lvbiA9IHRoaXMuZXhwcmVzc2lvbi5zbGljZSgwLCAtMSk7CiAgICB9LAogICAgZXZhbHVhdGUoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5leHByZXNzaW9uID0gZXZhbCh0aGlzLmV4cHJlc3Npb24pOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgdGhpcy5leHByZXNzaW9uID0gJ0Vycm9yJzsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["data","expression","methods","appendToExpression","value","clearExpression","backspace","slice","evaluate","eval","e"],"sources":["src/components/Calculator.vue"],"sourcesContent":["<template>\n    <div class=\"calculator\">\n      <div class=\"display\">{{ expression }}</div>\n      <div class=\"buttons\">\n        <div class=\"row\">\n          <button @click=\"appendToExpression('(')\">(</button>\n          <button @click=\"appendToExpression(')')\">)</button>\n          <button @click=\"clearExpression()\">C</button>\n          <button @click=\"backspace()\">‚Üê</button>\n        </div>\n        <div class=\"row\">\n          <button @click=\"appendToExpression('7')\">7</button>\n          <button @click=\"appendToExpression('8')\">8</button>\n          <button @click=\"appendToExpression('9')\">9</button>\n          <button @click=\"appendToExpression('*')\">*</button>\n        </div>\n        <div class=\"row\">\n          <button @click=\"appendToExpression('4')\">4</button>\n          <button @click=\"appendToExpression('5')\">5</button>\n          <button @click=\"appendToExpression('6')\">6</button>\n          <button @click=\"appendToExpression('/')\">/</button>\n        </div>\n        <div class=\"row\">\n          <button @click=\"appendToExpression('1')\">1</button>\n          <button @click=\"appendToExpression('2')\">2</button>\n          <button @click=\"appendToExpression('3')\">3</button>\n          <button @click=\"appendToExpression('+')\">+</button>\n        </div>\n        <div class=\"row\">\n          <button @click=\"appendToExpression('0')\">0</button>\n          <button @click=\"appendToExpression('.')\">.</button>\n          <button @click=\"appendToExpression('-')\">-</button>\n          <button @click=\"evaluate()\">=</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        expression: ''\n      };\n    },\n    methods: {\n      appendToExpression(value) {\n        this.expression += value;\n      },\n      clearExpression() {\n        this.expression = '';\n      },\n      backspace() {\n        this.expression = this.expression.slice(0, -1);\n      },\n      evaluate() {\n        try {\n          this.expression = eval(this.expression);\n        } catch (e) {\n          this.expression = 'Error';\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .calculator {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 50px auto;\n    font-size: 24px;\n  }\n  \n  .display {\n    margin-bottom: 20px;\n    padding: 10px;\n    background-color: #f0f0f0;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    width: 300px;\n    text-align: right;\n  }\n  \n  .buttons {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .row {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n  }\n  \n  button {\n    width: 70px;\n    height: 50px;\n    font-size: 18px;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n    background-color: #fff;\n    cursor: pointer;\n  }\n  </style>"],"mappings":"AAuCA;EACAA,KAAA;IACA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,mBAAAC,KAAA;MACA,KAAAH,UAAA,IAAAG,KAAA;IACA;IACAC,gBAAA;MACA,KAAAJ,UAAA;IACA;IACAK,UAAA;MACA,KAAAL,UAAA,QAAAA,UAAA,CAAAM,KAAA;IACA;IACAC,SAAA;MACA;QACA,KAAAP,UAAA,GAAAQ,IAAA,MAAAR,UAAA;MACA,SAAAS,CAAA;QACA,KAAAT,UAAA;MACA;IACA;EACA;AACA"}]}